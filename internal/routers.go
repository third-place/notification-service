/*
 * Otto user service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package internal

import (
	"github.com/third-place/notification-service/internal/controller"
	"github.com/gorilla/mux"
	"net/http"
	"strings"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)
	_, _ = w.Write([]byte("Hello world!"))
}

var routes = Routes{
	{
		"Index",
		strings.ToUpper("Get"),
		"/",
		Index,
	},
	{
		"AcknowledgeNotificationsForUserV1",
		strings.ToUpper("Patch"),
		"/notification",
		controller.AcknowledgeNotificationsForUserV1,
	},
	{
		"GetNotificationsForUserV1",
		strings.ToUpper("Get"),
		"/notification",
		controller.GetNotificationsForUserV1,
	},
}
